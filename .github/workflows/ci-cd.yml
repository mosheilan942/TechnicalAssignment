name: .NET


#I need this jobs:
# Run

on: ['push']
  # push:
  #   branches: [ 'main' ]

env:
  IMAGE_NAME: mosheilan/myrepo/hello-world


jobs:
  # debug:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Debug trigger info
  #     run: |
  #       echo "Actor: ${{ github.actor }}"
  #       echo "Event: ${{ github.event_name }}"
  #       echo "SHA: ${{ github.sha }}"

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal

  set-tag:
    permissions:
      contents: write
    needs: test
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.tag_version.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.MYGITHUBTOKEN }}
          default_bump: 'patch'

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
      - name: print-version
        run: echo ${{ steps.tag_version.outputs.new_tag }}

  build:
    needs: set-tag
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          tags: ${{ env.IMAGE_NAME }}:${{ needs.set-tag.outputs.version }}
          annotations: ${{ steps.meta.outputs.annotations }}
          file: ../../HelloWorldApp/Dockerfile
          push: false
          outputs: type=docker,dest=${{ runner.temp }}/${{ env.IMAGE_NAME }}:${{ needs.set-tag.outputs.version }}.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: myimage
          path: ${{ runner.temp }}/${{ env.IMAGE_NAME }}:${{ needs.set-tag.outputs.version }}.tar

  Trivy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: myimage
          path: ${{ runner.temp }}/${{ env.IMAGE_NAME }}:${{ needs.set-tag.outputs.version }}.tar

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ env.IMAGE_NAME }}:${{ needs.set-tag.outputs.version }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      
